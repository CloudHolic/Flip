<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Flip.Controls"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors">
    <DataTemplate x:Key="RestoreWhite">
        <Grid UseLayoutRounding="True">
            <Path Data="M1,3 L1,11 L9,11 L9,3 z M3,1 L3,2 L10,2 L10,9 L11,9 L11,1 z M2,0 L12,0 L12,10 L10,10 L10,12 L0,12 L0,2 L2,2 z"
                  Width="12" Height="12" UseLayoutRounding="True" Fill="White"
                  VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="CloseWhite">
        <Grid UseLayoutRounding="True">
            <Path Data="M1,0 L6,5 L11,0 L12,1 L7,6 L12,11 L11,12 L6,7 L1,12 L0,11 L5,6 L0,1 z"
                  Width="12" Height="12" UseLayoutRounding="True" Fill="White"
                  VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MaximizeWhite">
        <Grid UseLayoutRounding="True">
            <Path Data="M1,1 L1,11 L11,11 L11,1 z M0,0 L12,0 L12,12 L0,12 z"
                  Width="12" Height="12" UseLayoutRounding="True" Fill="White"
                  VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MinimizeWhite">
        <Grid UseLayoutRounding="True">
            <Path Data="M0,5 L12,5 L12,6 L0,6 z"
                  Width="12" Height="12" UseLayoutRounding="True" Fill="White"
                  VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Grid>
    </DataTemplate>


    <Style x:Key="TitleBarButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Background" Value="#66FFFFFF"/>
        <Setter Property="Width" Value="36"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="LayoutRoot" Background="Transparent">
                        <Rectangle x:Name="ButtonBackground" Fill="{TemplateBinding Background}" Opacity="0"/>
                        <Border x:Name="ButtonBorder" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="TitleBarButtonContentPresenter" Focusable="False" RecognizesAccessKey="True"
                                              HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" TargetName="ButtonBackground"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.6" TargetName="ButtonBackground"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Opacity" Value="0.5" TargetName="TitleBarButtonContentPresenter"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CustomWindowStyle" TargetType="{x:Type local:CustomWindow}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="#FFF1F1F1"/>
        <Setter Property="BorderBrush" Value="#FF0874AA"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="WindowStyle" Value="SingleBorderWindow"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="0" GlassFrameThickness="1"
                              UseAeroCaptionButtons="False" NonClientFrameEdges="None"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomWindow}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            x:Name="WindowBorder">
                        <Grid x:Name="LayoutRoot" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0" x:Name="PART_WindowTitleGrid" Height="26.4"
                                  Background="{TemplateBinding BorderBrush}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0" Orientation="Horizontal">
                                    <Button VerticalAlignment="Center" Margin="7,0,5,0" IsTabStop="False"
                                            Content="{TemplateBinding Icon}"
                                            Height="{x:Static SystemParameters.SmallIconHeight}"
                                            Width="{x:Static SystemParameters.SmallIconWidth}"
                                            WindowChrome.IsHitTestVisibleInChrome="True">
                                        <Button.Template>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Image Source="{TemplateBinding Content}"/>
                                            </ControlTemplate>
                                        </Button.Template>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <i:InvokeCommandAction Command="{x:Static SystemCommands.ShowSystemMenuCommand}"/>
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="MouseDoubleClick">
                                                <i:InvokeCommandAction Command="{x:Static SystemCommands.CloseWindowCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <ContentControl IsTabStop="False" Foreground="White"
                                                    HorizontalAlignment="Center" VerticalAlignment="Center"
                                                    FontSize="{DynamicResource {x:Static SystemFonts.CaptionFontSize}}"
                                                    Content="{TemplateBinding Title}"/>
                                </StackPanel>

                                <StackPanel Grid.Column="1" x:Name="WindowCommandButtonsStackPanel"
                                            HorizontalAlignment="Right" VerticalAlignment="Stretch"
                                            Background="Transparent" Orientation="Horizontal"
                                            WindowChrome.IsHitTestVisibleInChrome="True"
                                            Margin="0, -1, -1, 0">
                                    <Button x:Name="Minimize" ToolTip="Minimize" IsTabStop="False"
                                            WindowChrome.IsHitTestVisibleInChrome="True"
                                            Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}"
                                            ContentTemplate="{StaticResource MinimizeWhite}"
                                            Style="{StaticResource TitleBarButtonStyle}"/>
                                    <Grid Margin="1,0,1,0">
                                        <Button x:Name="Restore" ToolTip="Restore" IsTabStop="False"
                                                WindowChrome.IsHitTestVisibleInChrome="True" Visibility="Collapsed"
                                                Command="{Binding Source={x:Static SystemCommands.RestoreWindowCommand}}"
                                                ContentTemplate="{StaticResource RestoreWhite}"
                                                Style="{StaticResource TitleBarButtonStyle}"/>
                                        <Button x:Name="Maximize" ToolTip="Maximize" IsTabStop="False"
                                                WindowChrome.IsHitTestVisibleInChrome="True"
                                                Command="{Binding Source={x:Static SystemCommands.MaximizeWindowCommand}}"
                                                ContentTemplate="{StaticResource MaximizeWhite}"
                                                Style="{StaticResource TitleBarButtonStyle}"/>
                                    </Grid>
                                    <Button x:Name="Close" ToolTip="Close" IsTabStop="False"
                                            WindowChrome.IsHitTestVisibleInChrome="True" Background="Red"
                                            Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}"
                                            ContentTemplate="{StaticResource CloseWhite}"
                                            Style="{StaticResource TitleBarButtonStyle}"/>
                                </StackPanel>
                            </Grid>

                            <AdornerDecorator Grid.Row="1" KeyboardNavigation.IsTabStop="False">
                                <ContentPresenter x:Name="MainContentPresenter" Content="{TemplateBinding Content}"
                                                  KeyboardNavigation.TabNavigation="Cycle"/>
                            </AdornerDecorator>

                            <ResizeGrip Grid.Row="1" x:Name="ResizeGrip"
                                        HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                        IsTabStop="False" Visibility="Hidden"
                                        WindowChrome.ResizeGripDirection="BottomRight"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="False">
                            <Setter Property="BorderBrush" Value="#FF6F7785"/>
                        </Trigger>

                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed"/>

                            <Setter TargetName="Restore" Property="Visibility" Value="Visible"/>

                            <Setter TargetName="LayoutRoot" Property="Margin" Value="7"/>
                        </Trigger>

                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="Maximize" Property="Visibility" Value="Visible"/>

                            <Setter TargetName="Restore" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="Minimize" Property="Visibility" Value="Collapsed"/>

                            <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed"/>

                            <Setter TargetName="Restore" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>

                                <Condition Property="WindowState" Value="Normal"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>